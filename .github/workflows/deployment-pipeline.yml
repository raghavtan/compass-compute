name: Deployment Pipeline

on:
  push:
    branches:
      - master

permissions:
  id-token: write
  contents: write
  actions: read

jobs:
  commit:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.artifact-version.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Add Go bin to PATH
        run: echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - uses: actions/cache@v4
        with:
          key: ${{ hashFiles('go.mod') }}

      - id: code-correctness
        run: make setup deps check

      - id: artifact-version
        uses: anothrNick/github-tag-action@1.67.0
        env:
          GITHUB_TOKEN: ${{ github.token }}
          WITH_V: true
          RELEASE_BRANCHES: .*
          DEFAULT_BUMP: patch

      - id: build-binaries
        run: make build-all VERSION=${{ steps.artifact-version.outputs.new_tag }}

      - uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: ./bin

  release:
    runs-on: ubuntu-latest
    if: needs.commit.result == 'success'
    needs:
      - commit
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: binaries
          path: ./
      - id: github-release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create ${{ needs.commit.outputs.version }} \
          --latest \
          --generate-notes \
            ./compass-compute-${{ needs.commit.outputs.version }}-darwin-amd64.tar.gz \
            ./compass-compute-${{ needs.commit.outputs.version }}-darwin-arm64.tar.gz \
            ./compass-compute-${{ needs.commit.outputs.version }}-linux-amd64.tar.gz \
            ./compass-compute-${{ needs.commit.outputs.version }}-windows-amd64.zip \
            --title "${{ needs.commit.outputs.version }}" 
