name: Deployment Pipeline

on:
  push:
    branches:
      - master

permissions:
  id-token: write
  contents: write
  actions: read

jobs:
  commit:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.artifact-version.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"

      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Add Go bin to PATH
        run: echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ hashFiles('go.mod') }}

      - name: Setup development tools
        run: make setup deps

      - name: Run code quality checks (CI-friendly)
        run: make check-ci

      - name: Run tests
        run: make test test-race test-cover

      - name: Generate version tag
        id: artifact-version
        uses: anothrNick/github-tag-action@1.67.0
        env:
          GITHUB_TOKEN: ${{ github.token }}
          WITH_V: true
          RELEASE_BRANCHES: .*
          DEFAULT_BUMP: patch

      - name: Build multi-platform binaries
        run: make build-all VERSION=${{ steps.artifact-version.outputs.new_tag }}

      - name: Create release archives
        run: |
          cd bin
          # Create tar.gz for Unix platforms
          tar -czf compass-compute-${{ steps.artifact-version.outputs.new_tag }}-linux-amd64.tar.gz compass-compute-linux-amd64
          tar -czf compass-compute-${{ steps.artifact-version.outputs.new_tag }}-darwin-amd64.tar.gz compass-compute-darwin-amd64
          tar -czf compass-compute-${{ steps.artifact-version.outputs.new_tag }}-darwin-arm64.tar.gz compass-compute-darwin-arm64
          
          # Create zip for Windows
          zip compass-compute-${{ steps.artifact-version.outputs.new_tag }}-windows-amd64.zip compass-compute-windows-amd64.exe

      - uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: ./bin

  release:
    runs-on: ubuntu-latest
    if: needs.commit.result == 'success'
    needs:
      - commit
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: binaries
          path: ./bin

      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create ${{ needs.commit.outputs.version }} \
            --latest \
            --generate-notes \
            --title "${{ needs.commit.outputs.version }}" \
            ./bin/compass-compute-${{ needs.commit.outputs.version }}-darwin-amd64.tar.gz \
            ./bin/compass-compute-${{ needs.commit.outputs.version }}-darwin-arm64.tar.gz \
            ./bin/compass-compute-${{ needs.commit.outputs.version }}-linux-amd64.tar.gz \
            ./bin/compass-compute-${{ needs.commit.outputs.version }}-windows-amd64.zip